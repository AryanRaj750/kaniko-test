pipeline {
    agent {
        kubernetes {
            yaml '''
              apiVersion: v1
              kind: Pod
              metadata:
                namespace: jenkins
                name: sent
              spec:
                containers:
                - name: sentiment
                  image: aryan750/docker:latest
                  tty: true
                  env:
                  - name: AWS_ACCESS_KEY_ID
                    valueFrom:
                      secretKeyRef:
                        name: aws-credentials
                        key: access-key
                  - name: AWS_SECRET_ACCESS_KEY
                    valueFrom:
                      secretKeyRef:
                        name: aws-credentials
                        key: secret-key
                  - name: AWS_DEFAULT_REGION
                    valueFrom:
                      secretKeyRef:
                        name: aws-credentials
                        key: region
                  - name: DOCKER_HOST
                    value: tcp://35.91.217.78:4243

                  volumeMounts:
                  - mountPath: /var/run/docker.sock
                    name: docker
                volumes:
                - name: docker
                  hostPath:
                    path: /var/run/docker.sock
            '''
        }
    }
    environment {
        SSM_PARAMETER_WEBAPP = "/aryan/webapp/url"
        APP_NAME = "sa-frontend"
        REGION = "us-west-2"
        ECR_URI = "421320058418.dkr.ecr.us-west-2.amazonaws.com"
        REPO_NAME   = 'aryan-sa-frontend'
        USER = "Aryan Raj"
        EMAIL = "Ar9131000@gmail.com"
    }
    stages {
        stage('React-Frontend-Image-Build') {            
            options {
                timeout(time: 1, unit: 'HOURS') 
                retry(1) 
            }
            steps {
                container('sentiment') {
                    sh '''
                        echo 'Building Front-End React App'
                        webapi=`aws ssm get-parameters --name ${SSM_PARAMETER_WEBAPP} --query Parameters[0] | jq -r .Value`
                        sed  -i 's,http://localhost:8080/sentiment,'$webapi',g' sa-frontend/src/App.js
                        docker build -f ./sa-frontend/Dockerfile -t ${APP_NAME}:v$BUILD_ID ./sa-frontend
                        docker tag ${APP_NAME}:v$BUILD_ID ${ECR_URI}/${REPO_NAME}:v$BUILD_ID
                    '''
                }                
            }
        }   
        stage('React-Frontend-Image-Push') {            
            options {
                timeout(time: 1, unit: 'HOURS')
                retry(1) 
            }
            steps {  
                container('sentiment') {              
                    sh '''
                        aws ecr get-login-password --region ${REGION} | docker login --username AWS --password-stdin ${ECR_URI}
                        docker push ${ECR_URI}/${REPO_NAME}:v$BUILD_ID
                        echo 'Image has Pushed!'
                    '''
                }
            }
        }       
        stage('Update helm chart Release Version') {
            
            options {
                timeout(time: 1, unit: 'HOURS') 
                retry(1) 
            }
            
            steps {  
                container('sentiment') {                             
                    withCredentials([usernamePassword(credentialsId: 'GITHUB', passwordVariable: 'GIT_PASSWD', usernameVariable: 'GIT_USER')]){
                        git credentialsId: 'GITHUB', url: 'https://github.com/AryanRaj750/helm.git'
                        sh """                 
                            sed -i 's/.*sa_frontend_version.*/sa_frontend_version: v$BUILD_ID/g' Sentiment-Analyser/values.yaml                  
                            git config --global --add safe.directory /home/jenkins/agent/workspace/$JOB_NAME
                            git remote set-url origin https://${GIT_PASSWD}@github.com/AryanRaj750/helm.git                        
                            git add .
                            git config --global user.email ${EMAIL}
                            git config --global user.name ${USER}
                            git commit -m 'new build $BUILD_ID'
                            git push origin master
                        """
                    }            
                }         
                
            }
        } 
    }
}
